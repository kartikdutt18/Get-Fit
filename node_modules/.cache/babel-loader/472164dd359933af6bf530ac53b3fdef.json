{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aarongreenburg/Uzumaki/Work/SWE/Open-Source/Workout-Management-React-App/workout-management-app/src/components/ActivityList/index.jsx\";\nimport React from 'react';\nimport { withFirebase } from '../Firebase';\nimport loader from './loader.gif';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction ActivityList(props) {\n  const {\n    loading,\n    activities,\n    editActivity,\n    setOpenSnackbar,\n    setSnackbarMsg,\n    setEditing\n  } = props;\n\n  const deleteActivity = i => {\n    // Get key of activity in firebase\n    const activityKey = Object.keys(activities)[i]; // Connect to our firebase API\n\n    const emptyActivity = {\n      date: null,\n      duration: null,\n      type: null,\n      name: null\n    };\n    props.firebase.updateActivity(props.authUser.uid, emptyActivity, activityKey); // Show notification\n\n    setOpenSnackbar(true);\n    setSnackbarMsg('Deleted activity');\n    setTimeout(() => {\n      setOpenSnackbar(false);\n    }, 3000); // stop editing\n\n    setEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: loader,\n      alt: loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this) : '', activities === 'not set' || activities === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No activities added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: Object.values(activities).map((activity, i) => {\n            let {\n              name,\n              type,\n              duration\n            } = activity;\n\n            switch (activity.type) {\n              case 1:\n                type = \"Lifting weights\";\n                break;\n\n              case 2:\n                type = \"Running\";\n                break;\n\n              case 3:\n                type = \"Cycling\";\n                break;\n\n              default:\n                type = \"Not set\";\n            }\n\n            ;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  onClick: e => deleteActivity(i)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n                  onClick: e => editActivity(activity, i),\n                  style: {\n                    marginLeft: \"20px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ActivityList;\n;\nexport default _c2 = withFirebase(ActivityList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActivityList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/aarongreenburg/Uzumaki/Work/SWE/Open-Source/Workout-Management-React-App/workout-management-app/src/components/ActivityList/index.jsx"],"names":["React","withFirebase","loader","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DeleteIcon","EditIcon","ActivityList","props","loading","activities","editActivity","setOpenSnackbar","setSnackbarMsg","setEditing","deleteActivity","i","activityKey","Object","keys","emptyActivity","date","duration","type","name","firebase","updateActivity","authUser","uid","setTimeout","values","map","activity","e","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA8B,aAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,YAAtB;AAAmCC,IAAAA,eAAnC;AAAoDC,IAAAA,cAApD;AAAoEC,IAAAA;AAApE,MAAkFN,KAAxF;;AAEA,QAAMO,cAAc,GAAIC,CAAD,IAAO;AAC1B;AACD,UAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYT,UAAZ,EAAwBM,CAAxB,CAApB,CAF2B,CAG3B;;AACA,UAAMI,aAAa,GAAG;AACjBC,MAAAA,IAAI,EAAE,IADW;AAEjBC,MAAAA,QAAQ,EAAE,IAFO;AAGjBC,MAAAA,IAAI,EAAE,IAHW;AAIjBC,MAAAA,IAAI,EAAE;AAJW,KAAtB;AAOAhB,IAAAA,KAAK,CAACiB,QAAN,CAAeC,cAAf,CAA8BlB,KAAK,CAACmB,QAAN,CAAeC,GAA7C,EAAkDR,aAAlD,EAAiEH,WAAjE,EAX2B,CAa3B;;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAC,IAAAA,cAAc,CAAC,kBAAD,CAAd;AACAgB,IAAAA,UAAU,CAAC,MAAM;AAChBjB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA,KAFS,EAEP,IAFO,CAAV,CAhB2B,CAoB3B;;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACF,GAtBD;;AAwBA,sBACI;AAAA,eAEQL,OAAO,KAAK,IAAZ,gBACM;AAAK,MAAA,GAAG,EAAEZ,MAAV;AAAkB,MAAA,GAAG,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADN,GAEM,EAJd,EAQQa,UAAU,KAAK,SAAf,IAA4BA,UAAU,KAAK,IAA3C,gBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,gBAGI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEN,KAA3B;AAAA,6BACI,QAAC,KAAD;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI,QAAC,QAAD;AAAA,oCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,SAAD;AAAA,oBAEIc,MAAM,CAACY,MAAP,CAAcpB,UAAd,EAA0BqB,GAA1B,CAA8B,CAACC,QAAD,EAAWhB,CAAX,KAAiB;AAC3C,gBAAI;AAACQ,cAAAA,IAAD;AAAOD,cAAAA,IAAP;AAAaD,cAAAA;AAAb,gBAAyBU,QAA7B;;AACA,oBAAOA,QAAQ,CAACT,IAAhB;AACI,mBAAK,CAAL;AACIA,gBAAAA,IAAI,GAAG,iBAAP;AACA;;AACJ,mBAAK,CAAL;AACIA,gBAAAA,IAAI,GAAG,SAAP;AACA;;AACJ,mBAAK,CAAL;AACIA,gBAAAA,IAAI,GAAG,SAAP;AACA;;AACJ;AACIA,gBAAAA,IAAI,GAAG,SAAP;AAXR;;AAYC;AACD,gCACI,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAA,0BAAYC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAA,0BAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,SAAD;AAAA,0BAAYD;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,SAAD;AAAA,wCACI,QAAC,UAAD;AACI,kBAAA,OAAO,EAAEW,CAAC,IAAIlB,cAAc,CAACC,CAAD;AADhC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,QAAD;AACI,kBAAA,OAAO,EAAEiB,CAAC,IAAItB,YAAY,CAACqB,QAAD,EAAWhB,CAAX,CAD9B;AAEI,kBAAA,KAAK,EAAE;AAACkB,oBAAAA,UAAU,EAAC;AAAZ;AAFX;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA,eAAelB,CAAf;AAAA;AAAA;AAAA;AAAA,oBADJ;AAgBH,WA/BD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXZ;AAAA,kBADJ;AA+DH;;KA1FQT,Y;AA0FR;AAED,qBAAeX,YAAY,CAACW,YAAD,CAA3B","sourcesContent":["import React from 'react';\nimport { withFirebase } from  '../Firebase';\nimport loader from './loader.gif';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction ActivityList(props) {\n    const {loading, activities, editActivity,setOpenSnackbar, setSnackbarMsg, setEditing} = props;\n\n    const deleteActivity = (i) => {\n        // Get key of activity in firebase\n       const activityKey = Object.keys(activities)[i];\n       // Connect to our firebase API\n       const emptyActivity = {\n            date: null,\n            duration: null,\n            type: null,\n            name: null,\n       };\n\n       props.firebase.updateActivity(props.authUser.uid, emptyActivity, activityKey);\n\n       // Show notification\n       setOpenSnackbar(true);\n       setSnackbarMsg('Deleted activity');\n       setTimeout(() => {\n        setOpenSnackbar(false)\n       }, 3000)\n\n       // stop editing\n       setEditing(false);\n    }\n\n    return (\n        <>\n            { \n                loading === true \n                    ? <img src={loader} alt={loader}></img> \n                    : ''\n            }\n            \n            {\n                activities === 'not set' || activities === null\n                    ? <p>No activities added yet.</p>\n                    :\n                    <TableContainer component={Paper} >\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell>Type</TableCell>\n                                    <TableCell>Duration</TableCell>\n                                    <TableCell>Actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {\n                                Object.values(activities).map((activity, i) => {\n                                    let {name, type, duration} = activity;\n                                    switch(activity.type) {\n                                        case 1:\n                                            type = \"Lifting weights\";\n                                            break;\n                                        case 2:\n                                            type = \"Running\";\n                                            break;\n                                        case 3:\n                                            type = \"Cycling\";\n                                            break;\n                                        default:\n                                            type = \"Not set\";\n                                    };\n                                    return (\n                                        <TableRow key={i}>\n                                            <TableCell>{name}</TableCell>\n                                            <TableCell>{type}</TableCell>\n                                            <TableCell>{duration}</TableCell>\n                                            <TableCell>\n                                                <DeleteIcon \n                                                    onClick={e => deleteActivity(i)}\n                                                />\n                                                <EditIcon\n                                                    onClick={e => editActivity(activity, i)}\n                                                    style={{marginLeft:\"20px\"}}\n                                                />\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })\n                            }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n            }\n        </>\n    )\n};\n\nexport default withFirebase(ActivityList);"]},"metadata":{},"sourceType":"module"}